2025-04-02 20:35:52,571+0000 ERROR [ForkJoinPool.commonPool-worker-1]  *SYSTEM org.sonatype.nexus.internal.node.datastore.LocalNodeAccess - Failed to determine hostname, using nodeId instead.
        at org.sonatype.nexus.internal.web.ErrorPageFilter.doFilter(ErrorPageFilter.java:81)
2025-04-02 20:36:40,210+0000 WARN  [qtp857732012-27]  nexus_admin org.sonatype.nexus.siesta.internal.UnexpectedExceptionMapper - (ID 67b2eb35-bca0-4c70-abb0-44af707037be) Response: [500] 'ERROR: (ID 67b2eb35-bca0-4c70-abb0-44af707037be) java.lang.IllegalArgumentException: EULA has alreadybeen accepted'; mapped from: java.lang.IllegalArgumentException: EULA has already been accepted
2025-04-02 20:36:45,123+0000 ERROR [quartz-8-thread-16]  *TASK com.sonatype.nexus.risk.riskondisk.MaliciousRiskRegistriesCacheHelper - Error fetching and caching enabled registries: class org.bouncycastle.jcajce.provider.asymmetric.edec.BCXDHPublicKey cannot be cast to class java.security.interfaces.XECPublicKey (org.bouncycastle.jcajce.provider.asymmetric.edec.BCXDHPublicKey is in unnamed module of loader org.springframework.boot.loader.launch.LaunchedClassLoader @1ddc4ec2; java.security.interfaces.XECPublicKey is in module java.base of loader 'bootstrap')
2025-04-02 20:43:48,761+0000 ERROR [qtp857732012-26]  *UNKNOWN com.sonatype.nexus.risk.riskondisk.MaliciousRiskOnDiskCacheHelper - Error fetching and caching risk on disk count class org.bouncycastle.jcajce.provider.asymmetric.edec.BCXDHPublicKey cannot be cast to class java.security.interfaces.XECPublicKey (org.bouncycastle.jcajce.provider.asymmetric.edec.BCXDHPublicKey is in unnamed module of loader org.springframework.boot.loader.launch.LaunchedClassLoader @1ddc4ec2; java.security.interfaces.XECPublicKey is in module java.base of loader 'bootstrap')
        at org

- name: acceptEula | Encode credentials for Basic Authentication
  ansible.builtin.set_fact:
    nexus_auth_header: "Basic {{ (nexus_current_admin_user + ':' + nexus_current_admin_password) | b64encode }}"

- name: acceptEula | Output authentication header
  ansible.builtin.debug:
    var: nexus_auth_header
    verbosity: 3

- name: acceptEula | Check EULA status with auth header
  ansible.builtin.uri:
    url: "{{ nexus_api_url }}{{ nexus_rest_api_eula_endpoint }}"
    method: GET
    headers:
      Authorization: "{{ nexus_auth_header }}"
      Content-Type: "application/json"
      Accept: "application/json"
    status_code: 200, 401
    validate_certs: "{{ nexus_api_validate_certs }}"
  register: eula_get_response

- name: acceptEula | Show output of EULA GET response with default credentials
  ansible.builtin.debug:
    msg: |
     server is {{ eula_get_response.server }}
     status is {{ eula_get_response.status }}
     json is {{ eula_get_response.json | to_json }}
- name: acceptEula | Set body for response
  ansible.builtin.set_fact:
    eula_body:
      disclaimer: "{{ eula_get_response.json.disclaimer }}"
      accepted: 'true'

- name: acceptEula | Accept Nexus EULA if not already accepted
  ansible.builtin.uri:
    url: "{{ nexus_api_url }}{{ nexus_rest_api_eula_endpoint }}"
    method: POST
    body_format: json
    status_code: 204
    validate_certs: "{{ nexus_api_validate_certs }}"
    headers:
      Authorization: "{{ nexus_auth_header }}"
      Content-Type: "application/json"
      Accept: "application/json"
    body: "{{ eula_body }}"
  register: eula_post_response

- name: acceptEula | Show output of EULA POST response with default credentials
  ansible.builtin.debug:
    var: eula_post_response.json
  when: eula_post_response.json is defined

