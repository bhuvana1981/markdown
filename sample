- name: configureAdmin | Check if admin.password file exists
  ansible.builtin.stat:
    path: "{{ nexus_data_dir }}/admin.password"
  register: admin_password_file

- name: configureAdmin | Read default admin password from file
  ansible.builtin.shell: cat {{ nexus_data_dir }}/admin.password
  register: default_admin_password_content
  when: admin_password_file.stat.exists
  no_log: true

- name: configureAdmin | Set default admin password fact
  ansible.builtin.set_fact:
    nexus_default_admin_password: "{{ default_admin_password_content.stdout | trim }}"
  when: admin_password_file.stat.exists
  no_log: true

- name: configureAdmin | Set fallback default password
  ansible.builtin.set_fact:
    nexus_default_admin_password: "admin123"
  when: not admin_password_file.stat.exists
  no_log: true

- name: configureAdmin | Debug admin password file existence
  ansible.builtin.debug:
    msg: "Admin password file exists: {{ admin_password_file.stat.exists | default(false) }}"

- name: configureAdmin | Set API URL
  ansible.builtin.set_fact:
    nexus_api_url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}"

- name: configureAdmin | Set current admin user and password based on installation state
  ansible.builtin.set_fact:
    nexus_current_admin_user: "{{ 'admin' if admin_password_file.stat.exists else nexus_admin_user }}"
    nexus_current_admin_password: "{{ nexus_default_admin_password if admin_password_file.stat.exists else nexus_admin_password }}"
  no_log: true

# Try all possible authentication combinations
- name: configureAdmin | Generate auth headers for all credential combinations
  ansible.builtin.set_fact:
    auth_headers:
      default: "Basic {{ ('admin:' ~ nexus_default_admin_password) | b64encode }}"
      configured: "Basic {{ (nexus_admin_user ~ ':' ~ nexus_admin_password) | b64encode }}"
      current: "Basic {{ (nexus_current_admin_user ~ ':' ~ nexus_current_admin_password) | b64encode }}"
  no_log: true

- name: configureAdmin | Test authentication with default credentials
  ansible.builtin.uri:
    url: "{{ nexus_api_url }}/service/rest/v1/status/check"
    method: GET
    headers:
      Authorization: "{{ auth_headers.default }}"
    status_code: 200, 401, 403
    validate_certs: "{{ nexus_api_validate_certs | default(false) }}"
  register: auth_test_default
  ignore_errors: true

- name: configureAdmin | Test authentication with configured credentials
  ansible.builtin.uri:
    url: "{{ nexus_api_url }}/service/rest/v1/status/check"
    method: GET
    headers:
      Authorization: "{{ auth_headers.configured }}"
    status_code: 200, 401, 403
    validate_certs: "{{ nexus_api_validate_certs | default(false) }}"
  register: auth_test_configured
  ignore_errors: true

- name: configureAdmin | Test authentication with current credentials
  ansible.builtin.uri:
    url: "{{ nexus_api_url }}/service/rest/v1/status/check"
    method: GET
    headers:
      Authorization: "{{ auth_headers.current }}"
    status_code: 200, 401, 403
    validate_certs: "{{ nexus_api_validate_certs | default(false) }}"
  register: auth_test_current
  ignore_errors: true

- name: configureAdmin | Debug auth test results
  ansible.builtin.debug:
    msg:
      - "Default auth result: {{ auth_test_default.status }}"
      - "Configured auth result: {{ auth_test_configured.status }}"
      - "Current auth result: {{ auth_test_current.status }}"

- name: configureAdmin | Determine working auth header
  ansible.builtin.set_fact:
    working_auth_header: "{{ auth_headers.default if auth_test_default.status == 200 else 
                           (auth_headers.configured if auth_test_configured.status == 200 else 
                           (auth_headers.current if auth_test_current.status == 200 else '')) }}"
    has_working_credentials: "{{ auth_test_default.status == 200 or auth_test_configured.status == 200 or auth_test_current.status == 200 }}"
  no_log: true

- name: configureAdmin | Debug credential status
  ansible.builtin.debug:
    msg: "Has working credentials: {{ has_working_credentials }}"

- name: configureAdmin | Fail if no working credentials found
  ansible.builtin.fail:
    msg: "Unable to authenticate with any credential combination. Please check Nexus configuration."
  when: not has_working_credentials

