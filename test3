---
- name: configureAdmin | Check if admin.password file exists {{ nexus_data_dir }}
  ansible.builtin.stat:
    path: "{{ nexus_data_dir }}/admin.password"
  register: admin_password_file

- name: configureAdmin | List results of admin file check
  ansible.builtin.debug:
    msg: >
      admin file found {{ admin_password_file.stat.exists }}
      data dir contents: {{ nexus_data_dir_contents.stdout }}

- name: configureAdmin | Set API URL
  ansible.builtin.set_fact:
    nexus_api_url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}"

- name: configureAdmin | Set current nexus admin for first-time installation
  ansible.builtin.set_fact:
    nexus_current_admin_user: 'admin'
  when:
    - admin_password_file.stat.exists

- name: configureAdmin | Re-Set current nexus admin if not a first time install
  ansible.builtin.set_fact:
    nexus_current_admin_user: "{{ nexus_admin_user }}"
  when: not admin_password_file.stat.exists

- name: configureAdmin | TEST password by accessing API using defined password for '{{ nexus_current_admin_user }}'
  ansible.builtin.uri:
    url: "{{ nexus_api_url }}{{ nexus_rest_api_script_endpoint }}"
    user: "{{ nexus_current_admin_user }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: yes
    status_code: 200, 401, 404, -1
    validate_certs: "{{ nexus_api_validate_certs }}"
  register: nexus_api_head_with_defined_password
  check_mode: no

- name: configureAdmin | Debug output of first TEST call
  ansible.builtin.debug:
    var: nexus_api_head_with_defined_password

- name: configureAdmin | Register defined admin password for next operations
  ansible.builtin.set_fact:
    nexus_current_admin_password: "{{ nexus_admin_password }}"
  when: nexus_api_head_with_defined_password.status != 401
  no_log: "{{ no_log_value | default('true') }}"
